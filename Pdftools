<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="PDFMaster is your all-in-one online PDF solution offering powerful, easy-to-use tools for all your document needs. Merge multiple PDFs into one file, split PDFs into individual pages, compress large files without losing quality, and convert PDFs to editable Word or Excel formats‚Äîall for free. Our secure, cloud-based platform processes files quickly without storing your documents, ensuring privacy. Access our tools from any device, anytime, with no installation required. Perfect for students, professionals, and businesses looking to streamline their document workflows.">
    <meta name="keywords" content="PDF tools, Merge PDF, Split PDF, Compress PDF,Online PDF converter,PDF to Excel,PDF to word, PDF document tools,Combine PDF files,reduce pdf size">
    <title>PDFMaster - Advanced PDF Tools</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #3f37c9;
            --light: #f8f9fa;
            --dark: #212529;
            --success: #4cc9f0;
            --danger: #f72585;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            line-height: 1.6;
            color: var(--dark);
            margin: 0;
            padding: 0;
            background-color: #f5f7ff;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        /* Header Styles */
        header {
            background-color: white;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 0;
        }
        
        .logo {
            font-size: 24px;
            font-weight: 700;
            color: var(--primary);
            text-decoration: none;
        }
        
        .nav-links {
            display: flex;
            gap: 30px;
        }
        
        .nav-links a {
            color: var(--dark);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
        }
        
        .nav-links a:hover {
            color: var(--primary);
        }
        
        .btn {
            display: inline-block;
            padding: 10px 20px;
            border-radius: 6px;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s;
            cursor: pointer;
        }
        
        .btn-primary {
            background-color: var(--primary);
            color: white;
            border: 2px solid var(--primary);
        }
        
        .btn-primary:hover {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
        }
        
        /* Hero Section */
        .hero {
            padding: 80px 0;
            text-align: center;
        }
        
        .hero h1 {
            font-size: 48px;
            font-weight: 700;
            margin-bottom: 20px;
            color: var(--dark);
        }
        
        .hero p {
            font-size: 20px;
            color: #6c757d;
            max-width: 700px;
            margin: 0 auto 40px;
        }
        
        /* File Upload Area */
        .upload-area {
            background-color: white;
            border-radius: 12px;
            padding: 40px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            margin-bottom: 40px;
            border: 2px dashed #dee2e6;
            text-align: center;
            transition: all 0.3s;
        }
        
        .upload-area:hover {
            border-color: var(--primary);
        }
        
        .upload-area h3 {
            margin-bottom: 20px;
            color: var(--dark);
        }
        
        .upload-icon {
            font-size: 48px;
            color: var(--primary);
            margin-bottom: 20px;
        }
        
        /* Tools Grid */
        .tools-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 30px;
            margin: 60px 0;
        }
        
        .tool-card {
            background-color: white;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            transition: transform 0.3s, box-shadow 0.3s;
            cursor: pointer;
        }
        
        .tool-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        }
        
        .tool-icon {
            font-size: 36px;
            color: var(--primary);
            margin-bottom: 20px;
        }
        
        .tool-card h3 {
            margin-bottom: 15px;
        }
        
        /* Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }
        
        .modal-content {
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            width: 80%;
            max-width: 600px;
            max-height: 80vh;
            overflow-y: auto;
        }
        
        .close-modal {
            float: right;
            font-size: 24px;
            cursor: pointer;
        }
        
        /* Progress Bar */
        .progress-container {
            width: 100%;
            background-color: #e9ecef;
            border-radius: 5px;
            margin: 20px 0;
        }
        
        .progress-bar {
            height: 10px;
            background-color: var(--primary);
            border-radius: 5px;
            width: 0%;
            transition: width 0.3s;
        }
        
        /* Footer */
        footer {
            background-color: var(--dark);
            color: white;
            padding: 60px 0 20px;
        }
        
        .footer-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 40px;
            margin-bottom: 40px;
        }
        
        .footer-column h4 {
            margin-bottom: 20px;
            font-size: 18px;
        }
        
        .footer-column ul {
            list-style: none;
            padding: 0;
        }
        
        .footer-column ul li {
            margin-bottom: 10px;
        }
        
        .footer-column ul li a {
            color: #adb5bd;
            text-decoration: none;
            transition: color 0.3s;
        }
        
        .footer-column ul li a:hover {
            color: white;
        }
        
        .copyright {
            text-align: center;
            padding-top: 20px;
            border-top: 1px solid #495057;
            color: #adb5bd;
        }
        
        /* Responsive */
        @media (max-width: 768px) {
            .navbar {
                flex-direction: column;
                gap: 20px;
            }
            
            .hero h1 {
                font-size: 36px;
            }
            
            .hero p {
                font-size: 18px;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <nav class="navbar">
                <a href="#" class="logo">PDFMaster</a>
                <div class="nav-links">
                    <a href="#">Home</a>
                    <a href="#">Tools</a>
                    <a href="#">Pricing</a>
                    <a href="#">About</a>
                    <a href="#">Contact</a>
                </div>
                <div>
                    <a href="#" class="btn btn-primary">Sign In</a>
                </div>
            </nav>
        </div>
    </header>
    
    <main>
        <section class="hero">
            <div class="container">
                <h1>All Your PDF Tools in One Place</h1>
                <p>Merge, split, compress, convert and edit PDF files with our powerful online tools. Fast, secure and free to use!</p>
                <a href="#tools" class="btn btn-primary">Get Started</a>
            </div>
        </section>
        
        <section class="container" id="tools">
            <div class="upload-area" id="uploadArea">
                <div class="upload-icon">üìÅ</div>
                <h3>Drag & Drop Your PDF Files Here</h3>
                <p>or</p>
                <button class="btn btn-primary" id="browseFiles">Browse Files</button>
                <input type="file" id="fileInput" accept=".pdf" style="display: none;" multiple>
            </div>
            
            <h2>Popular PDF Tools</h2>
            <div class="tools-grid">
                <div class="tool-card" data-tool="merge">
                    <div class="tool-icon">üîó</div>
                    <h3>Merge PDF</h3>
                    <p>Combine multiple PDF files into one document in seconds.</p>
                </div>
                
                <div class="tool-card" data-tool="split">
                    <div class="tool-icon">‚úÇÔ∏è</div>
                    <h3>Split PDF</h3>
                    <p>Extract pages or split your PDF into multiple files.</p>
                </div>
                
                <div class="tool-card" data-tool="compress">
                    <div class="tool-icon">üóúÔ∏è</div>
                    <h3>Compress PDF</h3>
                    <p>Reduce PDF file size while maintaining quality.</p>
                </div>
                
                <div class="tool-card" data-tool="word">
                    <div class="tool-icon">üìù</div>
                    <h3>PDF to Word</h3>
                    <p>Convert PDF files to editable Word documents.</p>
                </div>
                
                <div class="tool-card" data-tool="excel">
                    <div class="tool-icon">üìä</div>
                    <h3>PDF to Excel</h3>
                    <p>Extract tables from PDF to Excel spreadsheets.</p>
                </div>
                
                <div class="tool-card" data-tool="convert">
                    <div class="tool-icon">üîÑ</div>
                    <h3>Convert PDF</h3>
                    <p>Convert to and from JPG, PNG, PPT and more.</p>
                </div>
            </div>
        </section>
    </main>
    
    <!-- Modal for Tool Actions -->
    <div class="modal" id="toolModal">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2 id="modalTitle">Merge PDF Files</h2>
            <div id="modalContent">
                <div class="upload-area" id="modalUploadArea">
                    <div class="upload-icon">üìÅ</div>
                    <h3>Drag & Drop Your PDF Files Here</h3>
                    <p>or</p>
                    <button class="btn btn-primary" id="modalBrowseFiles">Browse Files</button>
                    <input type="file" id="modalFileInput" accept=".pdf" style="display: none;" multiple>
                </div>
                <div id="fileList"></div>
                <div class="progress-container" id="progressContainer" style="display: none;">
                    <div class="progress-bar" id="progressBar"></div>
                </div>
                <button class="btn btn-primary" id="processBtn" style="display: none; margin-top: 20px;">Process Files</button>
            </div>
        </div>
    </div>
    
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-column">
                    <h4>PDFMaster</h4>
                    <p>Your all-in-one solution for PDF files. Fast, secure and easy to use online tools.</p>
                </div>
                
                <div class="footer-column">
                    <h4>Tools</h4>
                    <ul>
                        <li><a href="#">Merge PDF</a></li>
                        <li><a href="#">Split PDF</a></li>
                        <li><a href="#">Compress PDF</a></li>
                        <li><a href="#">PDF to Word</a></li>
                        <li><a href="#">PDF to Excel</a></li>
                    </ul>
                </div>
                
                <div class="footer-column">
                    <h4>Company</h4>
                    <ul>
                        <li><a href="#">About Us</a></li>
                        <li><a href="#">Careers</a></li>
                        <li><a href="#">Contact</a></li>
                        <li><a href="#">Blog</a></li>
                    </ul>
                </div>
                
                <div class="footer-column">
                    <h4>Legal</h4>
                    <ul>
                        <li><a href="#">Terms of Service</a></li>
                        <li><a href="#">Privacy Policy</a></li>
                        <li><a href="#">Cookie Policy</a></li>
                        <li><a href="#">GDPR</a></li>
                    </ul>
                </div>
            </div>
            
            <div class="copyright">
                <p>&copy; 2023 PDFMaster. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        // Frontend JavaScript
        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const toolCards = document.querySelectorAll('.tool-card');
            const uploadArea = document.getElementById('uploadArea');
            const browseFilesBtn = document.getElementById('browseFiles');
            const fileInput = document.getElementById('fileInput');
            const toolModal = document.getElementById('toolModal');
            const closeModal = document.querySelector('.close-modal');
            const modalTitle = document.getElementById('modalTitle');
            const modalUploadArea = document.getElementById('modalUploadArea');
            const modalBrowseFiles = document.getElementById('modalBrowseFiles');
            const modalFileInput = document.getElementById('modalFileInput');
            const fileList = document.getElementById('fileList');
            const processBtn = document.getElementById('processBtn');
            const progressContainer = document.getElementById('progressContainer');
            const progressBar = document.getElementById('progressBar');
            
            let currentTool = '';
            let selectedFiles = [];
            
            // Tool Card Click Handlers
            toolCards.forEach(card => {
                card.addEventListener('click', function() {
                    currentTool = this.getAttribute('data-tool');
                    openToolModal(currentTool);
                });
            });
            
            // Open Tool Modal
            function openToolModal(tool) {
                // Set modal title based on tool
                const toolTitles = {
                    'merge': 'Merge PDF Files',
                    'split': 'Split PDF File',
                    'compress': 'Compress PDF File',
                    'word': 'Convert PDF to Word',
                    'excel': 'Convert PDF to Excel',
                    'convert': 'Convert PDF File'
                };
                
                modalTitle.textContent = toolTitles[tool] || 'PDF Tool';
                toolModal.style.display = 'flex';
                
                // Reset modal content
                fileList.innerHTML = '';
                selectedFiles = [];
                processBtn.style.display = 'none';
                progressContainer.style.display = 'none';
            }
            
            // Close Modal
            closeModal.addEventListener('click', function() {
                toolModal.style.display = 'none';
            });
            
            // Click outside modal to close
            window.addEventListener('click', function(event) {
                if (event.target === toolModal) {
                    toolModal.style.display = 'none';
                }
            });
            
            // File Upload Handling
            function setupFileUpload(uploadArea, fileInput, callback) {
                // Prevent default drag behaviors
                ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                    uploadArea.addEventListener(eventName, preventDefaults, false);
                });
                
                function preventDefaults(e) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                
                // Highlight drop area when item is dragged over it
                ['dragenter', 'dragover'].forEach(eventName => {
                    uploadArea.addEventListener(eventName, highlight, false);
                });
                
                ['dragleave', 'drop'].forEach(eventName => {
                    uploadArea.addEventListener(eventName, unhighlight, false);
                });
                
                function highlight() {
                    uploadArea.style.borderColor = 'var(--primary)';
                    uploadArea.style.backgroundColor = 'rgba(67, 97, 238, 0.1)';
                }
                
                function unhighlight() {
                    uploadArea.style.borderColor = '#dee2e6';
                    uploadArea.style.backgroundColor = 'white';
                }
                
                // Handle dropped files
                uploadArea.addEventListener('drop', handleDrop, false);
                
                function handleDrop(e) {
                    const dt = e.dataTransfer;
                    const files = dt.files;
                    callback(files);
                }
                
                // Handle file input
                fileInput.addEventListener('change', function() {
                    callback(this.files);
                });
            }
            
            // Main upload area
            setupFileUpload(uploadArea, fileInput, function(files) {
                if (files.length > 0) {
                    openToolModal('merge'); // Default to merge when files are dropped on main area
                    handleFiles(files);
                }
            });
            
            // Modal upload area
            setupFileUpload(modalUploadArea, modalFileInput, function(files) {
                if (files.length > 0) {
                    handleFiles(files);
                }
            });
            
            // Browse files buttons
            browseFilesBtn.addEventListener('click', function() {
                fileInput.click();
            });
            
            modalBrowseFiles.addEventListener('click', function() {
                modalFileInput.click();
            });
            
            // Handle selected files
            function handleFiles(files) {
                // Convert FileList to array and filter for PDFs
                const newFiles = Array.from(files).filter(file => file.type === 'application/pdf' || file.name.endsWith('.pdf'));
                
                if (newFiles.length === 0) {
                    alert('Please select PDF files only.');
                    return;
                }
                
                // Add to selected files
                selectedFiles = [...selectedFiles, ...newFiles];
                
                // Display file list
                displayFileList();
                
                // Show process button if we have files
                if (selectedFiles.length > 0) {
                    processBtn.style.display = 'block';
                }
            }
            
            // Display list of selected files
            function displayFileList() {
                fileList.innerHTML = '<h3>Selected Files:</h3>';
                
                if (selectedFiles.length === 0) {
                    fileList.innerHTML += '<p>No files selected</p>';
                    return;
                }
                
                const list = document.createElement('ul');
                list.style.listStyleType = 'none';
                list.style.padding = '0';
                
                selectedFiles.forEach((file, index) => {
                    const item = document.createElement('li');
                    item.style.display = 'flex';
                    item.style.justifyContent = 'space-between';
                    item.style.alignItems = 'center';
                    item.style.marginBottom = '10px';
                    item.style.padding = '10px';
                    item.style.backgroundColor = '#f8f9fa';
                    item.style.borderRadius = '5px';
                    
                    const fileInfo = document.createElement('div');
                    fileInfo.textContent = `${file.name} (${formatFileSize(file.size)})`;
                    
                    const removeBtn = document.createElement('button');
                    removeBtn.textContent = 'Remove';
                    removeBtn.style.padding = '5px 10px';
                    removeBtn.style.backgroundColor = 'var(--danger)';
                    removeBtn.style.color = 'white';
                    removeBtn.style.border = 'none';
                    removeBtn.style.borderRadius = '3px';
                    removeBtn.style.cursor = 'pointer';
                    
                    removeBtn.addEventListener('click', function() {
                        selectedFiles.splice(index, 1);
                        displayFileList();
                        
                        if (selectedFiles.length === 0) {
                            processBtn.style.display = 'none';
                        }
                    });
                    
                    item.appendChild(fileInfo);
                    item.appendChild(removeBtn);
                    list.appendChild(item);
                });
                
                fileList.appendChild(list);
            }
            
            // Format file size
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }
            
            // Process button click handler
            processBtn.addEventListener('click', function() {
                if (selectedFiles.length === 0) return;
                
                // Disable button during processing
                processBtn.disabled = true;
                processBtn.textContent = 'Processing...';
                progressContainer.style.display = 'block';
                
                // Simulate processing with progress
                let progress = 0;
                const interval = setInterval(() => {
                    progress += 5;
                    progressBar.style.width = `${progress}%`;
                    
                    if (progress >= 100) {
                        clearInterval(interval);
                        processComplete();
                    }
                }, 200);
            });
            
            // Process complete handler
            function processComplete() {
                progressBar.style.backgroundColor = 'var(--success)';
                processBtn.textContent = 'Download Result';
                processBtn.disabled = false;
                
                // Change button to download
                processBtn.onclick = function() {
                    // In a real app, this would download the processed file from the server
                    alert('In a real implementation, this would download the processed file.');
                    toolModal.style.display = 'none';
                    
                    // Reset modal
                    setTimeout(() => {
                        progressBar.style.width = '0%';
                        progressBar.style.backgroundColor = 'var(--primary)';
                        processBtn.textContent = 'Process Files';
                        processBtn.onclick = processBtnClickHandler;
                        fileList.innerHTML = '';
                        selectedFiles = [];
                        processBtn.style.display = 'none';
                        progressContainer.style.display = 'none';
                    }, 500);
                };
            }
            
            // Save original process button click handler
            const processBtnClickHandler = processBtn.onclick;
        });
    </script>

    <!-- Backend Server (Node.js with Express) -->
    <script type="text/javascript">
        // This would normally be in a separate server.js file
        // For demo purposes, we're including a simple server implementation
        
        // Check if we're in a Node.js environment
        if (typeof process !== 'undefined' && process.versions && process.versions.node) {
            const express = require('express');
            const multer = require('multer');
            const fs = require('fs');
            const path = require('path');
            const { PDFDocument } = require('pdf-lib');
            const AdmZip = require('adm-zip');
            
            const app = express();
            const port = 3000;
            
            // Configure file upload
            const upload = multer({ dest: 'uploads/' });
            
            // Create necessary directories
            if (!fs.existsSync('uploads')) {
                fs.mkdirSync('uploads');
            }
            
            if (!fs.existsSync('output')) {
                fs.mkdirSync('output');
            }
            
            // Serve static files
            app.use(express.static(__dirname));
            app.use(express.json());
            
            // PDF Merge Endpoint
            app.post('/api/merge', upload.array('files', 10), async (req, res) => {
                try {
                    const files = req.files;
                    if (!files || files.length < 2) {
                        return res.status(400).json({ error: 'Please upload at least 2 PDF files' });
                    }
            
                    const mergedPdf = await PDFDocument.create();
                    
                    for (const file of files) {
                        const pdfBytes = fs.readFileSync(file.path);
                        const pdfDoc = await PDFDocument.load(pdfBytes);
                        const pages = await mergedPdf.copyPages(pdfDoc, pdfDoc.getPageIndices());
                        pages.forEach(page => mergedPdf.addPage(page));
                        
                        // Delete the uploaded file after processing
                        fs.unlinkSync(file.path);
                    }
            
                    const mergedPdfBytes = await mergedPdf.save();
                    const outputPath = path.join(__dirname, 'output', `merged-${Date.now()}.pdf`);
                    fs.writeFileSync(outputPath, mergedPdfBytes);
                    
                    res.download(outputPath, 'merged.pdf', () => {
                        fs.unlinkSync(outputPath);
                    });
                } catch (err) {
                    console.error(err);
                    res.status(500).json({ error: 'Failed to merge PDFs' });
                }
            });
            
            // PDF Split Endpoint
            app.post('/api/split', upload.single('file'), async (req, res) => {
                try {
                    if (!req.file) {
                        return res.status(400).json({ error: 'Please upload a PDF file' });
                    }
            
                    const pdfBytes = fs.readFileSync(req.file.path);
                    const pdfDoc = await PDFDocument.load(pdfBytes);
                    const pageCount = pdfDoc.getPageCount();
                    
                    // Split each page into separate PDF
                    const zip = new AdmZip();
                    
                    for (let i = 0; i < pageCount; i++) {
                        const newPdf = await PDFDocument.create();
                        const [page] = await newPdf.copyPages(pdfDoc, [i]);
                        newPdf.addPage(page);
                        const newPdfBytes = await newPdf.save();
                        zip.addFile(`page-${i+1}.pdf`, Buffer.from(newPdfBytes));
                    }
                    
                    const zipData = zip.toBuffer();
                    const zipPath = path.join(__dirname, 'output', `split-${Date.now()}.zip`);
                    fs.writeFileSync(zipPath, zipData);
                    
                    res.download(zipPath, 'split_pages.zip', () => {
                        fs.unlinkSync(zipPath);
                        fs.unlinkSync(req.file.path);
                    });
                } catch (err) {
                    console.error(err);
                    res.status(500).json({ error: 'Failed to split PDF' });
                }
            });
            
            // Start server
            app.listen(port, () => {
                console.log(`Server running on port ${port}`);
            });
        }
    </script>
</body>
</html>
